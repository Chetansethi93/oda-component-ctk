apiVersion: oda.tmforum.org/v1alpha1
kind: component
metadata:
  name: next-docmgmt
  labels:
    oda.tmforum.org/componentName: next-docmgmt
spec:
  type: ocs
  selector:
    matchLabels:
     oda.tmforum.org/componentName: next-docmgmt
  componentKinds:
    - group: core
      kind: Service
    - group: apps
      kind: Deployment  
  version: "0.0.1"
  description: "Vodafone-Next implementation of TM Forum Product Catalog Component." 
  maintainers:
    - name: Lester Thomas
      email: lester.thomas@vodafone.com
  owners:
    - name: Lester Thomas
      email: lester.thomas@vodafone.com     
  coreFunction:
    exposedAPIs: 
    - name: productCatalog
      specification: https://open-api.tmforum.org/TMF667-DocumentManagement-v4.0.0.swagger.json
      implementation: next-dm
      path: /documentManagement
      developerUI: /documentManagement/swagger-ui.html
      port: 8888
    dependantAPIs: []
  eventNotification:
    publishedEvents: []
    subscribedEvents: []
  management: []
  security:
    securitySchemes: []
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: next-dm
  labels:
    oda.tmforum.org/componentName: next-docmgmt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: next-dm
  template:
    metadata:
      labels:
        app: next-dm
    spec:
      serviceAccountName: odacomponent-account
      initContainers:
      - name: pod-dependency
        image: ylonkar/pod-dependency-init-container:1.0.2
        env:
        - name: POD_LABELS
          value: app=next-mongo-dm
        - name: MAX_RETRY
          value: "10"
        - name: RETRY_TIME_OUT
          value: "5000"
      containers:
      - name: next-dm
        image: lesterthomas/next-docmgmt:0.0.1
        env:
        - name: MONGO_DB_URL
          value: "next-mongo-dm:27017"
        ports:
        - name: next-dm
          containerPort: 8888
---
apiVersion: v1
kind: Service
metadata:
  name: next-dm
  labels:
    app: next-dm
    oda.tmforum.org/componentName: next-docmgmt
spec:
  ports:
  - port: 8888
    targetPort: next-dm
    name: next-dm
  type: NodePort
  selector:
    app: next-dm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: next-minio-docmgmt
  labels:
    oda.tmforum.org/componentName: next-docmgmt
spec:
  selector:
    matchLabels:
      app: next-minio-docmgmt # has to match .spec.template.metadata.labels
  strategy:
    # Specifies the strategy used to replace old Pods by new ones
    # Refer: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    type: Recreate
  template:
    metadata:
      labels:
        # This label is used as a selector in Service definition
        app: next-minio-docmgmt
    spec:
      # Volumes used by this deployment
      volumes:
      - name: data
        # This volume is based on PVC
        persistentVolumeClaim:
          # Name of the PVC created earlier
          claimName: next-minio-docmgmt-pv-claim
      containers:
      - name: next-minio-docmgmt
        # Volume mounts for this container
        volumeMounts:
        # Volume 'data' is mounted to path '/data'
        - name: data 
          mountPath: "/data"
        # Pulls the lastest Minio image from Docker Hub
        image: minio/minio:RELEASE.2020-05-08T02-40-49Z
        args:
        - server
        - /data
        env:
        # MinIO access key and secret key
        - name: MINIO_ACCESS_KEY
          value: "minioadmin"
        - name: MINIO_SECRET_KEY
          value: "minioadmin"
        ports:
        - containerPort: 9000
        # Readiness probe detects situations when MinIO server instance
        # is not ready to accept traffic. Kubernetes doesn't forward
        # traffic to the pod while readiness checks fail.
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        # Liveness probe detects situations where MinIO server instance
        # is not working properly and needs restart. Kubernetes automatically
        # restarts the pods if liveness checks fail.
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20  
---
apiVersion: v1
kind: Service
metadata:
  # This name uniquely identifies the service
  name: next-minio-docmgmt-service
  labels:
    oda.tmforum.org/componentName: next-docmgmt
spec:
  type: LoadBalancer
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: next-minio-docmgmt
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # This name uniquely identifies the PVC. This is used in deployment.
  name: next-minio-docmgmt-pv-claim
spec:
  # Read more about access modes here: http://kubernetes.io/docs/user-guide/persistent-volumes/#access-modes
  accessModes:
    # The volume is mounted as read-write by a single node
    - ReadWriteOnce
  resources:
    # This is the request for storage. Should be available in the cluster.
    requests:
      storage: 10Gi    

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: next-mongo-dm
  labels:
    oda.tmforum.org/componentName: next-docmgmt
    app: next-mongo-dm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: next-mongo-dm
  template:
    metadata:
      labels:
        app: next-mongo-dm
    spec:
      containers:
      - name: next-mongo-dm
        image: lesterthomas/next-mongo-productcatalog:0.0.5
        ports:
        - name: next-mongo-dm
          containerPort: 27017
        volumeMounts:
        - name: next-mongo-dm-pv-storage
          mountPath: "/data/db"
      volumes:
      - name: next-mongo-dm-pv-storage
        persistentVolumeClaim:
          claimName: next-mongo-dm-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: next-mongo-dm
  labels:
    oda.tmforum.org/componentName: next-docmgmt
    app: next-mongo-dm
spec:
  ports:
  - port: 27017
    targetPort: next-mongo-dm
    name: next-mongo-dm
  type: NodePort
  selector:
    app: next-mongo-dm
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: next-mongo-dm-pv-claim
spec:
  storageClassName: standard
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi    
